# I relented.
source "%val{config}/plugins/plug.kak/rc/plug.kak"
plug "andreyorst/plug.kak" noload

set-option global scrolloff 5,3
set-option global autoreload yes
set-option global tabstop 4
set-option global indentwidth 4
set-option global ui_options terminal_assistant=none terminal_padding_char= 

add-highlighter global/ wrap -indent
add-highlighter global/ number-lines -relative -hlcursor

# Exit insert mode with `jk`.
hook global InsertChar k %{ try %{
  exec -draft hH <a-k>jk<ret> d
  exec <esc>
  write
}}

# Move in autocompletion with tab
hook global InsertCompletionShow .* %{
  try %{
    # this command temporarily removes cursors preceded by whitespace;
    # if there are no cursors left, it raises an error, does not
    # continue to execute the mapping commands, and the error is eaten
    # by the `try` command so no warning appears.
    execute-keys -draft "h<a-K>\h<ret>"
    map window insert <tab> <c-n>
    map window insert <s-tab> <c-p>
    hook -once -always window InsertCompletionHide .* %{
    unmap window insert <tab> <c-n>
    unmap window insert <s-tab> <c-p>
    }
  }
}

# Global clipboard
map global user y '<a-|>xsel -i -b<ret>'

plug "delapouite/kakoune-auto-percent"
plug "andreyorst/smarttab.kak"
plug "delapouite/kakoune-palette"
plug "occivink/kakoune-sudo-write"

plug "NNBnh/clipb.kak" config %{
  clipb-detect
  clipb-enable
}
    
# Language specific configuration.
hook global BufCreate (.*\.kak|kakrc) %{
  set-option buffer tabstop 2
  set-option global indentwidth 2
}

remove-hooks global rust-highlight
hook global WinSetOption filetype=rust %{
  add-highlighter -override window/ wrap -width 101 -indent
  source "%val{config}/filetypes/rust.kak"
}

# Colorscheme
source "%val{config}/colorscheme.kak"

# LSP stuff
plug "kak-lsp/kak-lsp" do %{
    cargo install --locked --force --path .
    # optional: if you want to use specific language servers
    mkdir -p ~/.config/kak-lsp
    cp -n kak-lsp.toml ~/.config/kak-lsp/
}

hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp) %{
  lsp-enable-window
  lsp-semantic-tokens

  hook window -group semantic-tokens BufReload .* %{
      lsp-highlight-references
      lsp-semantic-tokens
  }
  hook window -group semantic-tokens NormalIdle .* %{
      lsp-highlight-references
      lsp-semantic-tokens
  }
  hook window -group semantic-tokens InsertIdle .* %{
      lsp-highlight-references
      lsp-semantic-tokens
  }

  set-face global DiagnosticError default,default,bright-red+u
  set-face global DiagnosticWarning default,default,yellow+u
  set-face global DiagnosticInfo default

  map window user l %{: enter-user-mode lsp<ret>} -docstring "LSP mode"
  map global view h "<esc>: lsp-hover<ret>" -docstring "LSP hover"
  map global view e "<esc>: lsp-find-error<ret>" -docstring "LSP next error"
  map global view <a-e> "<esc>: lsp-find-error --previous <ret>" -docstring "LSP previous error"
}
